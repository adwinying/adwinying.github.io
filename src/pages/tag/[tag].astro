---
import { getCollection } from "astro:content";

import BlogHeader from "@/components/BlogHeader";
import Footer from "@/components/Footer";
import TagIndex from "@/components/TagIndex";
import BaseLayout from "@/layouts/base.astro";

export async function getStaticPaths() {
  const posts = await getCollection(
    "posts",
    ({ data }) => process.env.NODE_ENV === "development" || !data.draft,
  );
  const tags = [...new Set(posts.map((post) => post.data.tags).flat())];

  return tags.map((tag) => {
    const filteredPosts = posts
      .filter((post) => post.data.tags.includes(tag))
      .map(({ slug, data }) => ({
        title: data.title,
        slug,
        date: data.date,
        tags: data.tags,
      }));

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

interface Props {
  posts: Awaited<ReturnType<typeof getStaticPaths>>[0]["props"]["posts"];
}

const tag = Astro.params.tag ?? "";
const { posts } = Astro.props;
---

<BaseLayout
  title={`Posts Tagged ${tag}`}
  description={`A list of posts that are tagged with ${tag}`}
>
  <BlogHeader />

  <TagIndex className="mt-4 mb-12 flex-grow" tag={tag} posts={posts} />

  <Footer />
</BaseLayout>
